% Parameters
m = 1;      % Mass (kg)
k = 1;      % Spring constant (N/m)
c = 0.1;    % Damping coefficient (Ns/m)

% Derived parameters
omega_n = sqrt(k/m); % Natural frequency (rad/s)
zeta = c / (2*sqrt(m*k)); % Damping ratio

% Time vector
t = linspace(0, 50, 1000);

% Initial and final input frequencies
omega_start = 0.5 * omega_n;
omega_end = 1.5 * omega_n;

% Number of steps for frequency transition
steps = 5;

% Transition time vector
t_steps = linspace(0, 50, steps + 1);

% Initialize figure
figure;
hold on;
title('Dynamic Response of Harmonic Oscillator to Varying Input Frequencies');
xlabel('Time (s)');
ylabel('Displacement (m)');

% Loop through each time segment for animation
for j = 1:steps
    % Define the current time segment
    t_segment = t(t >= t_steps(j) & t < t_steps(j + 1));
    
    % Define the current input frequency
    omega = linspace(omega_start, omega_end, steps + 1);
    current_omega = omega(j);

    % Sinusoidal input for the current segment
    F_segment = sin(current_omega * t_segment);

    % Solve the differential equation for the current segment
    sys = tf(1, [m, c, k]);
    y_segment = lsim(sys, F_segment, t_segment);

    % Plot the response for the current segment
    plot(t_segment, y_segment, 'DisplayName', ['\omega_{input} = ', num2str(current_omega)]);
    drawnow;
    pause(1); % Pause to create the animation effect
end

% Legend
legend show;
hold off;